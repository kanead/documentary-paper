theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y"))
###################################################################################
# Documentary analysis
# Code for analysis of anomalies of time series of charity donations
###################################################################################
# Air dates
# episode 1 - 6 November 2016   2016-11-06
#                               2016-11-07
# episode 2 - 13 November 2016	2016-11-13
#                               2016-11-14
# episode 3 - 20 November 2016	2016-11-20
#                               2016-11-21
# episode 4 - 27 November 2016	2016-11-27
#                               2016-11-28
# episode 5 - 4 December 2016 	2016-12-04
#                               2016-12-05
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
###################################################################################
library(AnomalyDetection)
library(ggplot2)
library(dplyr)
# read in the data for the charity donations
bornFree<-read.csv("data/bornfree_donations.csv",header = T,sep = ",")
arkive<-read.csv("data/arkive_donations.csv",header = T,sep = ",")
# change to date format
bornFree$date<-as.POSIXct(strptime(bornFree$date,"%d/%m/%Y"))
arkive$date<-as.POSIXct(strptime(arkive$date,"%d/%m/%Y"))
# test for anomalies
# BornFree first
resBornFree = AnomalyDetectionTs(data.frame(bornFree[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resBornFree$plot
resBornFree$anoms
resBornFree$anoms$timestamp
ggplot(bornFree,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# now Arkive
resarkive = AnomalyDetectionTs(data.frame(arkive[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resarkive$plot
resarkive$anoms
resarkive$anoms$timestamp
ggplot(arkive,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# plot the data together
# set the times for Planet Earth 2 broadcast
rects <- data.frame(xstart = as.Date('2016-11-6 00:00:01'),
xend = as.Date('2016-12-17 23:59:59'))
# bind the donation data
mydata <- dplyr::bind_rows(list(df1=arkive, df2=bornFree), .id = 'source')
mydata$source <- as.factor(mydata$source)
head(mydata)
# add a column for anomalies
# 5.9 is the smallest value out of the 6 recorded anomalies
mydata$anom <- ifelse(mydata$standardised_amount>5.9,1,0)
# change factor levels to names of charities
levels(mydata$source)[levels(mydata$source)=="df1"] <- "Arkive"
levels(mydata$source)[levels(mydata$source)=="df2"] <- "Born Free"
# plot it
mydata$date <- as.Date(mydata$date)
mydata %>%
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf),alpha = 0.1,fill="red") +
geom_point(mapping=aes(date, standardised_amount),color=anom,stat="identity",size=1.2, position=position_jitter()) +
labs(x="Date",y= "Mean Standardised Donations") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y"))
###################################################################################
# Documentary analysis
# Code for analysis of anomalies of time series of charity donations
###################################################################################
# Air dates
# episode 1 - 6 November 2016   2016-11-06
#                               2016-11-07
# episode 2 - 13 November 2016	2016-11-13
#                               2016-11-14
# episode 3 - 20 November 2016	2016-11-20
#                               2016-11-21
# episode 4 - 27 November 2016	2016-11-27
#                               2016-11-28
# episode 5 - 4 December 2016 	2016-12-04
#                               2016-12-05
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
###################################################################################
library(AnomalyDetection)
library(ggplot2)
library(dplyr)
# read in the data for the charity donations
bornFree<-read.csv("data/bornfree_donations.csv",header = T,sep = ",")
arkive<-read.csv("data/arkive_donations.csv",header = T,sep = ",")
# change to date format
bornFree$date<-as.POSIXct(strptime(bornFree$date,"%d/%m/%Y"))
arkive$date<-as.POSIXct(strptime(arkive$date,"%d/%m/%Y"))
# test for anomalies
# BornFree first
resBornFree = AnomalyDetectionTs(data.frame(bornFree[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resBornFree$plot
resBornFree$anoms
resBornFree$anoms$timestamp
ggplot(bornFree,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# now Arkive
resarkive = AnomalyDetectionTs(data.frame(arkive[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resarkive$plot
resarkive$anoms
resarkive$anoms$timestamp
ggplot(arkive,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# plot the data together
# set the times for Planet Earth 2 broadcast
rects <- data.frame(xstart = as.Date('2016-11-6 00:00:01'),
xend = as.Date('2016-12-17 23:59:59'))
# bind the donation data
mydata <- dplyr::bind_rows(list(df1=arkive, df2=bornFree), .id = 'source')
mydata$source <- as.factor(mydata$source)
head(mydata)
# add a column for anomalies
# 5.9 is the smallest value out of the 6 recorded anomalies
mydata$anom <- ifelse(mydata$standardised_amount>5.9,1,0)
# change factor levels to names of charities
levels(mydata$source)[levels(mydata$source)=="df1"] <- "Arkive"
levels(mydata$source)[levels(mydata$source)=="df2"] <- "Born Free"
# plot it
mydata$date <- as.Date(mydata$date)
mydata %>%
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf),alpha = 0.1,fill="red") +
geom_point(mapping=aes(date, standardised_amount),stat="identity",size=1.2, position=position_jitter()) +
labs(x="Date",y= "Mean Standardised Donations") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y"))
###################################################################################
# Documentary analysis
# Code for analysis of anomalies of time series of charity donations
###################################################################################
# Air dates
# episode 1 - 6 November 2016   2016-11-06
#                               2016-11-07
# episode 2 - 13 November 2016	2016-11-13
#                               2016-11-14
# episode 3 - 20 November 2016	2016-11-20
#                               2016-11-21
# episode 4 - 27 November 2016	2016-11-27
#                               2016-11-28
# episode 5 - 4 December 2016 	2016-12-04
#                               2016-12-05
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
###################################################################################
library(AnomalyDetection)
library(ggplot2)
library(dplyr)
# read in the data for the charity donations
bornFree<-read.csv("data/bornfree_donations.csv",header = T,sep = ",")
arkive<-read.csv("data/arkive_donations.csv",header = T,sep = ",")
# change to date format
bornFree$date<-as.POSIXct(strptime(bornFree$date,"%d/%m/%Y"))
arkive$date<-as.POSIXct(strptime(arkive$date,"%d/%m/%Y"))
# test for anomalies
# BornFree first
resBornFree = AnomalyDetectionTs(data.frame(bornFree[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resBornFree$plot
resBornFree$anoms
resBornFree$anoms$timestamp
ggplot(bornFree,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# now Arkive
resarkive = AnomalyDetectionTs(data.frame(arkive[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resarkive$plot
resarkive$anoms
resarkive$anoms$timestamp
ggplot(arkive,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# plot the data together
# set the times for Planet Earth 2 broadcast
rects <- data.frame(xstart = as.Date('2016-11-6 00:00:01'),
xend = as.Date('2016-12-17 23:59:59'))
# bind the donation data
mydata <- dplyr::bind_rows(list(df1=arkive, df2=bornFree), .id = 'source')
mydata$source <- as.factor(mydata$source)
head(mydata)
# add a column for anomalies
# 5.9 is the smallest value out of the 6 recorded anomalies
mydata$anom <- ifelse(mydata$standardised_amount>5.9,1,0)
# change factor levels to names of charities
levels(mydata$source)[levels(mydata$source)=="df1"] <- "Arkive"
levels(mydata$source)[levels(mydata$source)=="df2"] <- "Born Free"
# plot it
mydata$date <- as.Date(mydata$date)
mydata %>%
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf),alpha = 0.1,fill="red") +
geom_point(mapping=aes(date, standardised_amount, color = standardised_amount > 5.9),stat="identity",size=1.2, position=position_jitter()) +
labs(x="Date",y= "Mean Standardised Donations") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y"))
###################################################################################
# Documentary analysis
# Code for analysis of anomalies of time series of charity donations
###################################################################################
# Air dates
# episode 1 - 6 November 2016   2016-11-06
#                               2016-11-07
# episode 2 - 13 November 2016	2016-11-13
#                               2016-11-14
# episode 3 - 20 November 2016	2016-11-20
#                               2016-11-21
# episode 4 - 27 November 2016	2016-11-27
#                               2016-11-28
# episode 5 - 4 December 2016 	2016-12-04
#                               2016-12-05
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
###################################################################################
library(AnomalyDetection)
library(ggplot2)
library(dplyr)
# read in the data for the charity donations
bornFree<-read.csv("data/bornfree_donations.csv",header = T,sep = ",")
arkive<-read.csv("data/arkive_donations.csv",header = T,sep = ",")
# change to date format
bornFree$date<-as.POSIXct(strptime(bornFree$date,"%d/%m/%Y"))
arkive$date<-as.POSIXct(strptime(arkive$date,"%d/%m/%Y"))
# test for anomalies
# BornFree first
resBornFree = AnomalyDetectionTs(data.frame(bornFree[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resBornFree$plot
resBornFree$anoms
resBornFree$anoms$timestamp
ggplot(bornFree,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# now Arkive
resarkive = AnomalyDetectionTs(data.frame(arkive[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resarkive$plot
resarkive$anoms
resarkive$anoms$timestamp
ggplot(arkive,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# plot the data together
# set the times for Planet Earth 2 broadcast
rects <- data.frame(xstart = as.Date('2016-11-6 00:00:01'),
xend = as.Date('2016-12-17 23:59:59'))
# bind the donation data
mydata <- dplyr::bind_rows(list(df1=arkive, df2=bornFree), .id = 'source')
mydata$source <- as.factor(mydata$source)
head(mydata)
# add a column for anomalies
# 5.9 is the smallest value out of the 6 recorded anomalies
mydata$anom <- ifelse(mydata$standardised_amount>5.9,1,0)
# change factor levels to names of charities
levels(mydata$source)[levels(mydata$source)=="df1"] <- "Arkive"
levels(mydata$source)[levels(mydata$source)=="df2"] <- "Born Free"
# plot it
mydata$date <- as.Date(mydata$date)
mydata %>%
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf),alpha = 0.1,fill="red") +
geom_point(mapping=aes(date, standardised_amount, color = standardised_amount > 5.9),stat="identity",size=1.2, position=position_jitter()) +
labs(x="Date",y= "Mean Standardised Donations") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y")) + theme(legend.position = "none")
###################################################################################
# Documentary analysis
# Code for analysis of anomalies of time series of charity donations
###################################################################################
# Air dates
# episode 1 - 6 November 2016   2016-11-06
#                               2016-11-07
# episode 2 - 13 November 2016	2016-11-13
#                               2016-11-14
# episode 3 - 20 November 2016	2016-11-20
#                               2016-11-21
# episode 4 - 27 November 2016	2016-11-27
#                               2016-11-28
# episode 5 - 4 December 2016 	2016-12-04
#                               2016-12-05
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
###################################################################################
library(AnomalyDetection)
library(ggplot2)
library(dplyr)
# read in the data for the charity donations
bornFree<-read.csv("data/bornfree_donations.csv",header = T,sep = ",")
arkive<-read.csv("data/arkive_donations.csv",header = T,sep = ",")
# change to date format
bornFree$date<-as.POSIXct(strptime(bornFree$date,"%d/%m/%Y"))
arkive$date<-as.POSIXct(strptime(arkive$date,"%d/%m/%Y"))
# test for anomalies
# BornFree first
resBornFree = AnomalyDetectionTs(data.frame(bornFree[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resBornFree$plot
resBornFree$anoms
resBornFree$anoms$timestamp
ggplot(bornFree,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# now Arkive
resarkive = AnomalyDetectionTs(data.frame(arkive[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resarkive$plot
resarkive$anoms
resarkive$anoms$timestamp
ggplot(arkive,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# plot the data together
# set the times for Planet Earth 2 broadcast
rects <- data.frame(xstart = as.Date('2016-11-6 00:00:01'),
xend = as.Date('2016-12-17 23:59:59'))
# bind the donation data
mydata <- dplyr::bind_rows(list(df1=arkive, df2=bornFree), .id = 'source')
mydata$source <- as.factor(mydata$source)
head(mydata)
# change factor levels to names of charities
levels(mydata$source)[levels(mydata$source)=="df1"] <- "Arkive"
levels(mydata$source)[levels(mydata$source)=="df2"] <- "Born Free"
# plot it
mydata$date <- as.Date(mydata$date)
mydata %>%
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf),alpha = 0.1,fill="red") +
geom_point(mapping=aes(date, standardised_amount, color = standardised_amount > 5.9),stat="identity",size=1.2, position=position_jitter()) +
labs(x="Date",y= "Mean Standardised Donations") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y")) + theme(legend.position = "none")
###################################################################################
# Documentary analysis
# Code for analysis of anomalies of time series of charity donations
###################################################################################
# Air dates
# episode 1 - 6 November 2016   2016-11-06
#                               2016-11-07
# episode 2 - 13 November 2016	2016-11-13
#                               2016-11-14
# episode 3 - 20 November 2016	2016-11-20
#                               2016-11-21
# episode 4 - 27 November 2016	2016-11-27
#                               2016-11-28
# episode 5 - 4 December 2016 	2016-12-04
#                               2016-12-05
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
###################################################################################
library(AnomalyDetection)
library(ggplot2)
library(dplyr)
# read in the data for the charity donations
bornFree<-read.csv("data/bornfree_donations.csv",header = T,sep = ",")
arkive<-read.csv("data/arkive_donations.csv",header = T,sep = ",")
# change to date format
bornFree$date<-as.POSIXct(strptime(bornFree$date,"%d/%m/%Y"))
arkive$date<-as.POSIXct(strptime(arkive$date,"%d/%m/%Y"))
# test for anomalies
# BornFree first
resBornFree = AnomalyDetectionTs(data.frame(bornFree[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resBornFree$plot
resBornFree$anoms
resBornFree$anoms$timestamp
ggplot(bornFree,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# now Arkive
resarkive = AnomalyDetectionTs(data.frame(arkive[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resarkive$plot
resarkive$anoms
resarkive$anoms$timestamp
ggplot(arkive,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# plot the data together
# set the times for Planet Earth 2 broadcast
rects <- data.frame(xstart = as.Date('2016-11-6 00:00:01'),
xend = as.Date('2016-12-17 23:59:59'))
# bind the donation data
mydata <- dplyr::bind_rows(list(df1=arkive, df2=bornFree), .id = 'source')
mydata$source <- as.factor(mydata$source)
head(mydata)
# change factor levels to names of charities
levels(mydata$source)[levels(mydata$source)=="df1"] <- "Arkive"
levels(mydata$source)[levels(mydata$source)=="df2"] <- "Born Free"
# plot it
mydata$date <- as.Date(mydata$date)
mydata %>%
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf),alpha = 0.1,fill="red") +
geom_point(mapping=aes(date, standardised_amount, color = standardised_amount > 5.9),stat="identity",size=1.2, position=position_jitter()) +
labs(x="Date",y= "Mean Standardised Donations") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y")) + theme(legend.position = "none") + scale_color_manual(values=c("#999999", "#E69F00"))
###################################################################################
# Documentary analysis
# Code for analysis of anomalies of time series of charity donations
###################################################################################
# Air dates
# episode 1 - 6 November 2016   2016-11-06
#                               2016-11-07
# episode 2 - 13 November 2016	2016-11-13
#                               2016-11-14
# episode 3 - 20 November 2016	2016-11-20
#                               2016-11-21
# episode 4 - 27 November 2016	2016-11-27
#                               2016-11-28
# episode 5 - 4 December 2016 	2016-12-04
#                               2016-12-05
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
###################################################################################
library(AnomalyDetection)
library(ggplot2)
library(dplyr)
# read in the data for the charity donations
bornFree<-read.csv("data/bornfree_donations.csv",header = T,sep = ",")
arkive<-read.csv("data/arkive_donations.csv",header = T,sep = ",")
# change to date format
bornFree$date<-as.POSIXct(strptime(bornFree$date,"%d/%m/%Y"))
arkive$date<-as.POSIXct(strptime(arkive$date,"%d/%m/%Y"))
# test for anomalies
# BornFree first
resBornFree = AnomalyDetectionTs(data.frame(bornFree[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resBornFree$plot
resBornFree$anoms
resBornFree$anoms$timestamp
ggplot(bornFree,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# now Arkive
resarkive = AnomalyDetectionTs(data.frame(arkive[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resarkive$plot
resarkive$anoms
resarkive$anoms$timestamp
ggplot(arkive,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# plot the data together
# set the times for Planet Earth 2 broadcast
rects <- data.frame(xstart = as.Date('2016-11-6 00:00:01'),
xend = as.Date('2016-12-17 23:59:59'))
# bind the donation data
mydata <- dplyr::bind_rows(list(df1=arkive, df2=bornFree), .id = 'source')
mydata$source <- as.factor(mydata$source)
head(mydata)
# change factor levels to names of charities
levels(mydata$source)[levels(mydata$source)=="df1"] <- "Arkive"
levels(mydata$source)[levels(mydata$source)=="df2"] <- "Born Free"
# plot it
mydata$date <- as.Date(mydata$date)
mydata %>%
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf),alpha = 0.1,fill="red") +
geom_point(mapping=aes(date, standardised_amount, color = standardised_amount > 5.9),stat="identity",size=1.2, position=position_jitter()) +
labs(x="Date",y= "Mean Standardised Donations") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y")) + theme(legend.position = "none") + scale_color_manual(values=c("#000000", "#E69F00"))
###################################################################################
# Documentary analysis
# Code for analysis of anomalies of time series of charity donations
###################################################################################
# Air dates
# episode 1 - 6 November 2016   2016-11-06
#                               2016-11-07
# episode 2 - 13 November 2016	2016-11-13
#                               2016-11-14
# episode 3 - 20 November 2016	2016-11-20
#                               2016-11-21
# episode 4 - 27 November 2016	2016-11-27
#                               2016-11-28
# episode 5 - 4 December 2016 	2016-12-04
#                               2016-12-05
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
###################################################################################
library(AnomalyDetection)
library(ggplot2)
library(dplyr)
# read in the data for the charity donations
bornFree<-read.csv("data/bornfree_donations.csv",header = T,sep = ",")
arkive<-read.csv("data/arkive_donations.csv",header = T,sep = ",")
# change to date format
bornFree$date<-as.POSIXct(strptime(bornFree$date,"%d/%m/%Y"))
arkive$date<-as.POSIXct(strptime(arkive$date,"%d/%m/%Y"))
# test for anomalies
# BornFree first
resBornFree = AnomalyDetectionTs(data.frame(bornFree[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resBornFree$plot
resBornFree$anoms
resBornFree$anoms$timestamp
ggplot(bornFree,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# now Arkive
resarkive = AnomalyDetectionTs(data.frame(arkive[1:2]), max_anoms=0.01, direction='both', plot=TRUE)
resarkive$plot
resarkive$anoms
resarkive$anoms$timestamp
ggplot(arkive,aes(date,standardised_amount)) + geom_point() + xlab("Date") + ylab("Mean standardised donations") + theme_classic()
# plot the data together
# set the times for Planet Earth 2 broadcast
rects <- data.frame(xstart = as.Date('2016-11-6 00:00:01'),
xend = as.Date('2016-12-17 23:59:59'))
# bind the donation data
mydata <- dplyr::bind_rows(list(df1=arkive, df2=bornFree), .id = 'source')
mydata$source <- as.factor(mydata$source)
head(mydata)
# change factor levels to names of charities
levels(mydata$source)[levels(mydata$source)=="df1"] <- "Arkive"
levels(mydata$source)[levels(mydata$source)=="df2"] <- "Born Free"
# plot it
mydata$date <- as.Date(mydata$date)
mydata %>%
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf),alpha = 0.1,fill="red") +
geom_point(mapping=aes(date, standardised_amount, color = standardised_amount > 5.9),stat="identity",size=1.2, position=position_jitter()) +
labs(x="Date",y= "Mean Standardised Donations") +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + facet_wrap(~ source,scales="free",ncol=2) +
theme(axis.title.x = element_text(size=15),
axis.title.y = element_text( size=15)) +
scale_x_date(date_breaks = "3 months",date_labels = ("%b %y")) + theme(legend.position = "none") + scale_color_manual(values=c("#000000", "#FF0000"))
