df26
impact26 <- CausalImpact(df26, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact26
#-------------------------
# palechantinggoshawk
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "palechantinggoshawk", n = 5)
df27<- zoo(cbind(median_data),time.points)
df27
impact27 <- CausalImpact(df27, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact27
#-------------------------
# pygmythreetoedsloth
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "pygmythreetoedsloth", n = 5)
df28<- zoo(cbind(median_data),time.points)
df28
impact28 <- CausalImpact(df28, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact28
#-------------------------
# railroadworm
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "railroadworm", n = 5)
df29<- zoo(cbind(median_data),time.points)
df29
impact29 <- CausalImpact(df29, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact29
#-------------------------
# redbirdofparadise
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "redbirdofparadise", n = 5)
df30<- zoo(cbind(median_data),time.points)
df30
impact30 <- CausalImpact(df30, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact30
#-------------------------
# riverdolphin
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "riverdolphin", n = 5)
df31<- zoo(cbind(median_data),time.points)
df31
impact31 <- CausalImpact(df31, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact31
#-------------------------
# saigaantelope
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "saigaantelope", n = 5)
df32<- zoo(cbind(median_data),time.points)
df32
impact32 <- CausalImpact(df32, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact32
#-------------------------
# sandgrouse
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "sandgrouse", n = 5)
df33<- zoo(cbind(median_data),time.points)
df33
impact33 <- CausalImpact(df33, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact33
#-------------------------
# shearwater
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "shearwater", n = 5)
df34<- zoo(cbind(median_data),time.points)
df34
impact34 <- CausalImpact(df34, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact34
#-------------------------
# slothbear
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "slothbear", n = 5)
df35<- zoo(cbind(median_data),time.points)
df35
impact35 <- CausalImpact(df35, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact35
#-------------------------
# snarespenguin
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "snarespenguin", n = 5)
df36<- zoo(cbind(median_data),time.points)
df36
impact36 <- CausalImpact(df36, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact36
#-------------------------
# southerncarminebeeeater
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "southerncarminebeeeater", n = 5)
df37<- zoo(cbind(median_data),time.points)
df37
impact37 <- CausalImpact(df37, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact37
#-------------------------
# spidermonkey
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "spidermonkey", n = 5)
df38<- zoo(cbind(median_data),time.points)
df38
impact38 <- CausalImpact(df38, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact38
#-------------------------
# spottedhyena
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "spottedhyena", n = 5)
df39<- zoo(cbind(median_data),time.points)
df39
impact39 <- CausalImpact(df39, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact39
#-------------------------
# swordbilledhummingbird
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "swordbilledhummingbird", n = 5)
df40<- zoo(cbind(median_data),time.points)
df40
impact40 <- CausalImpact(df40, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact40
#-------------------------
# welscatfish
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "welscatfish", n = 5)
df41<- zoo(cbind(median_data),time.points)
df41
impact41 <- CausalImpact(df41, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact41
#-------------------------
# wilsonsbirdofparadise
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "wilsonsbirdofparadise", n = 5)
df42<- zoo(cbind(median_data),time.points)
df42
impact42 <- CausalImpact(df42, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact42
#-------------------------
# yellowcrazyant
#-------------------------
median_data <- combineMedianComp(data1 = data_widePE2, data2 = data_widePE1[,-120], col = "yellowcrazyant", n = 5)
df43<- zoo(cbind(median_data),time.points)
df43
impact43 <- CausalImpact(df43, pre.period, post.period,model.args = list(nseasons = 7, season.duration = 1))
impact43
#-------------------------
# store the posterior probabilities
posterior_prob <- c(
impact1$summary$p[1],
impact2$summary$p[1],
impact3$summary$p[1],
impact4$summary$p[1],
impact5$summary$p[1],
impact6$summary$p[1],
impact7$summary$p[1],
impact8$summary$p[1],
impact9$summary$p[1],
impact10$summary$p[1],
impact11$summary$p[1],
impact12$summary$p[1],
impact13$summary$p[1],
impact14$summary$p[1],
impact15$summary$p[1],
impact16$summary$p[1],
impact17$summary$p[1],
impact18$summary$p[1],
impact19$summary$p[1],
impact20$summary$p[1],
impact21$summary$p[1],
impact22$summary$p[1],
impact23$summary$p[1],
impact24$summary$p[1],
impact25$summary$p[1],
impact26$summary$p[1],
impact27$summary$p[1],
impact28$summary$p[1],
impact29$summary$p[1],
impact30$summary$p[1],
impact31$summary$p[1],
impact32$summary$p[1],
impact33$summary$p[1],
impact34$summary$p[1],
impact35$summary$p[1],
impact36$summary$p[1],
impact37$summary$p[1],
impact38$summary$p[1],
impact39$summary$p[1],
impact40$summary$p[1],
impact41$summary$p[1],
impact42$summary$p[1],
impact43$summary$p[1])
# pull out the names for each species from PE2
article_names <-  c(head(names(df1),1),
head(names(df2),1),
head(names(df3),1),
head(names(df4),1),
head(names(df5),1),
head(names(df6),1),
head(names(df7),1),
head(names(df8),1),
head(names(df9),1),
head(names(df10),1),
head(names(df11),1),
head(names(df12),1),
head(names(df13),1),
head(names(df14),1),
head(names(df15),1),
head(names(df16),1),
head(names(df17),1),
head(names(df18),1),
head(names(df19),1),
head(names(df20),1),
head(names(df21),1),
head(names(df22),1),
head(names(df23),1),
head(names(df24),1),
head(names(df25),1),
head(names(df26),1),
head(names(df27),1),
head(names(df28),1),
head(names(df29),1),
head(names(df30),1),
head(names(df31),1),
head(names(df32),1),
head(names(df33),1),
head(names(df34),1),
head(names(df35),1),
head(names(df36),1),
head(names(df37),1),
head(names(df38),1),
head(names(df39),1),
head(names(df40),1),
head(names(df41),1),
head(names(df42),1),
head(names(df43),1))
article_names
# stick them together
summary_causal_impact <- cbind(data.frame(posterior_prob,article_names))
# find out which values are less than 0.05
summary_causal_impact$significance <- ifelse(summary_causal_impact$posterior_prob<0.05,1,0)
sum(summary_causal_impact$significance)
# lower values for average response
lower<-c(
impact1$summary$AbsEffect.lower[1],
impact2$summary$AbsEffect.lower[1],
impact3$summary$AbsEffect.lower[1],
impact4$summary$AbsEffect.lower[1],
impact5$summary$AbsEffect.lower[1],
impact6$summary$AbsEffect.lower[1],
impact7$summary$AbsEffect.lower[1],
impact8$summary$AbsEffect.lower[1],
impact9$summary$AbsEffect.lower[1],
impact10$summary$AbsEffect.lower[1],
impact11$summary$AbsEffect.lower[1],
impact12$summary$AbsEffect.lower[1],
impact13$summary$AbsEffect.lower[1],
impact14$summary$AbsEffect.lower[1],
impact15$summary$AbsEffect.lower[1],
impact16$summary$AbsEffect.lower[1],
impact17$summary$AbsEffect.lower[1],
impact18$summary$AbsEffect.lower[1],
impact19$summary$AbsEffect.lower[1],
impact20$summary$AbsEffect.lower[1],
impact21$summary$AbsEffect.lower[1],
impact22$summary$AbsEffect.lower[1],
impact23$summary$AbsEffect.lower[1],
impact24$summary$AbsEffect.lower[1],
impact25$summary$AbsEffect.lower[1],
impact26$summary$AbsEffect.lower[1],
impact27$summary$AbsEffect.lower[1],
impact28$summary$AbsEffect.lower[1],
impact29$summary$AbsEffect.lower[1],
impact30$summary$AbsEffect.lower[1],
impact31$summary$AbsEffect.lower[1],
impact32$summary$AbsEffect.lower[1],
impact33$summary$AbsEffect.lower[1],
impact34$summary$AbsEffect.lower[1],
impact35$summary$AbsEffect.lower[1],
impact36$summary$AbsEffect.lower[1],
impact37$summary$AbsEffect.lower[1],
impact38$summary$AbsEffect.lower[1],
impact39$summary$AbsEffect.lower[1],
impact40$summary$AbsEffect.lower[1],
impact41$summary$AbsEffect.lower[1],
impact42$summary$AbsEffect.lower[1],
impact43$summary$AbsEffect.lower[1]
)
# mean values for average response
averageEffect <- c(
impact1$summary$AbsEffect[1],
impact2$summary$AbsEffect[1],
impact3$summary$AbsEffect[1],
impact4$summary$AbsEffect[1],
impact5$summary$AbsEffect[1],
impact6$summary$AbsEffect[1],
impact7$summary$AbsEffect[1],
impact8$summary$AbsEffect[1],
impact9$summary$AbsEffect[1],
impact10$summary$AbsEffect[1],
impact11$summary$AbsEffect[1],
impact12$summary$AbsEffect[1],
impact13$summary$AbsEffect[1],
impact14$summary$AbsEffect[1],
impact15$summary$AbsEffect[1],
impact16$summary$AbsEffect[1],
impact17$summary$AbsEffect[1],
impact18$summary$AbsEffect[1],
impact19$summary$AbsEffect[1],
impact20$summary$AbsEffect[1],
impact21$summary$AbsEffect[1],
impact22$summary$AbsEffect[1],
impact23$summary$AbsEffect[1],
impact24$summary$AbsEffect[1],
impact25$summary$AbsEffect[1],
impact26$summary$AbsEffect[1],
impact27$summary$AbsEffect[1],
impact28$summary$AbsEffect[1],
impact29$summary$AbsEffect[1],
impact30$summary$AbsEffect[1],
impact31$summary$AbsEffect[1],
impact32$summary$AbsEffect[1],
impact33$summary$AbsEffect[1],
impact34$summary$AbsEffect[1],
impact35$summary$AbsEffect[1],
impact36$summary$AbsEffect[1],
impact37$summary$AbsEffect[1],
impact38$summary$AbsEffect[1],
impact39$summary$AbsEffect[1],
impact40$summary$AbsEffect[1],
impact41$summary$AbsEffect[1],
impact42$summary$AbsEffect[1],
impact43$summary$AbsEffect[1]
)
# upper values for average response
upper <- c(
impact1$summary$AbsEffect.upper[1],
impact2$summary$AbsEffect.upper[1],
impact3$summary$AbsEffect.upper[1],
impact4$summary$AbsEffect.upper[1],
impact5$summary$AbsEffect.upper[1],
impact6$summary$AbsEffect.upper[1],
impact7$summary$AbsEffect.upper[1],
impact8$summary$AbsEffect.upper[1],
impact9$summary$AbsEffect.upper[1],
impact10$summary$AbsEffect.upper[1],
impact11$summary$AbsEffect.upper[1],
impact12$summary$AbsEffect.upper[1],
impact13$summary$AbsEffect.upper[1],
impact14$summary$AbsEffect.upper[1],
impact15$summary$AbsEffect.upper[1],
impact16$summary$AbsEffect.upper[1],
impact17$summary$AbsEffect.upper[1],
impact18$summary$AbsEffect.upper[1],
impact19$summary$AbsEffect.upper[1],
impact20$summary$AbsEffect.upper[1],
impact21$summary$AbsEffect.upper[1],
impact22$summary$AbsEffect.upper[1],
impact23$summary$AbsEffect.upper[1],
impact24$summary$AbsEffect.upper[1],
impact25$summary$AbsEffect.upper[1],
impact26$summary$AbsEffect.upper[1],
impact27$summary$AbsEffect.upper[1],
impact28$summary$AbsEffect.upper[1],
impact29$summary$AbsEffect.upper[1],
impact30$summary$AbsEffect.upper[1],
impact31$summary$AbsEffect.upper[1],
impact32$summary$AbsEffect.upper[1],
impact33$summary$AbsEffect.upper[1],
impact34$summary$AbsEffect.upper[1],
impact35$summary$AbsEffect.upper[1],
impact36$summary$AbsEffect.upper[1],
impact37$summary$AbsEffect.upper[1],
impact38$summary$AbsEffect.upper[1],
impact39$summary$AbsEffect.upper[1],
impact40$summary$AbsEffect.upper[1],
impact41$summary$AbsEffect.upper[1],
impact42$summary$AbsEffect.upper[1],
impact43$summary$AbsEffect.upper[1]
)
summaryData <- data.frame(cbind(lower,averageEffect,upper,summary_causal_impact[1:43,]
))
head(summaryData)
# are the significant effects positive?
summaryData$positive <- ifelse(summaryData$averageEffect>0,1,0)
# 15 23 35 are the significant negatives
plot(impact2)
plot(impact14)
plot(impact15)
plot(impact23)
plot(impact28)
plot(impact35)
plot(impact38)
summaryData
sum(summaryData$positive>0)
sum(summaryData$positive>0 & summaryData$significance>0)
# export
write.csv(summaryData,"data/caual_impact_summary.csv",row.names = F)
# how many significant and positive results?
sum(summaryData$positive>0 & summaryData$significance>0)
plot(impact25)
################################################################################### Documentary analysis
# Code for Regression Models
##################################################################################
library(ggplot2)
library(fmsb) # VIF
library(MASS) # for negative binomial regression
library(broom) # export regression results
library(knitr) # export regression results
mydata<-read.csv("data/master.csv", header = T,sep=",")
head(mydata)
tail(mydata)
subData <- mydata[,c("baseline_2015","tweet","diff","seconds","taxa_gen","status","pred_prey","diaries")]
head(subData)
tail(subData)
# diff represents the difference between the maximum value the page had on the day
# or day after broadcast minus the baseline value from mid 2015 to mid 2016
# rename prey in the pred_prey as pred
levels(subData$pred_prey)[levels(subData$pred_prey)=="prey"] <- "pred"
head(subData)
# recode actinopterygii, amphibia, arachnida, diplopoda, malacostraca
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="actinopterygii"] <- "reptilia"
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="amphibia"] <- "reptilia"
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="arachnida"] <- "insecta"
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="diplopoda"] <- "insecta"
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="malacostraca"] <- "insecta"
head(subData)
levels(subData$taxa_gen)
##################################################################################
# ANOVA of time on screen as a function of conservation status
##################################################################################
# replace the NAs in conservation status with 0
subData$status[is.na(subData$status)] <- 0
subData$status <- as.factor(subData$status)
levels(subData$status)
m.aov<-aov(subData$seconds~subData$status)
summary(m.aov)
p <- ggplot(subData, aes(x=status, y=seconds,fill=status)) +
geom_boxplot() +
labs(x="IUCN status", y = "Seconds on screen")
p + scale_fill_manual(labels = c("data deficient", "least concern", "near threatened", "vulnerable","endangered","critically endangered"),values=c("#ffffff", "#009933", "#336600","#ff9900", "#cc0000", "#990000"),name="IUCN status") + theme_classic() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
summary(subData$status)
round(summary(subData$status)/sum(table(subData$status)),3)
sum(round(summary(subData$status)/sum(table(subData$status)),3))
p2 <- ggplot(subData, aes(x=status, y=tweet,fill=status)) +
geom_boxplot() +
labs(x="IUCN status", y = "number of tweets")
p2 + scale_fill_manual(labels = c("data deficient", "least concern", "near threatened", "vulnerable","endangered","critically endangered"),values=c("#ffffff", "#009933", "#336600","#ff9900", "#cc0000", "#990000"),name="IUCN status") + theme_classic() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
##################################################################################
# Simple linear model for wikipedia hits
##################################################################################
# find out which explanatory variables have NAs
apply(subData, 2, function(x){any(is.na(x))})
m.lm.wiki <- lm(diff~seconds,data = subData)
summary(m.lm.wiki)
plot(m.lm.wiki) # poor fit
##################################################################################
# fit poisson regression for wiki hits on with the negatives removed
##################################################################################
# drop the differences that are negative i.e. those pages that had values less
# than the median on the episode of Planet Earth 2 covered that species
length(subData$baseline_2015)
wikiData<-subData[subData$diff>0,]
wikiData <- droplevels(wikiData)
length(wikiData$baseline_2015)
# multicolinearity test
VIF(lm(wikiData$tweet~wikiData$seconds+wikiData$diff))
VIF(lm(wikiData$seconds~wikiData$tweet+wikiData$diff))
VIF(lm(wikiData$diff~wikiData$tweet+wikiData$seconds))
m.poiss.wiki <- glm(diff~seconds,data = wikiData,family=poisson)
summary(m.poiss.wiki) # overdispersed
##################################################################################
# fit negative binomial regression for wiki hits on with the negatives removed
##################################################################################
m.NB.wiki <- glm.nb(diff~seconds,data = wikiData)
summary(m.NB.wiki)
plot(m.NB.wiki)
# get the coefficients back in units we can understand by undoing the link function
exp(coef(m.NB.wiki))
# get pseudo R^2 values
modEvA::RsqGLM(model=m.NB.wiki)
# export regression output
tidy_m.NB.wiki <- tidy(m.NB.wiki)
tidy_m.NB.wiki
kable(tidy_m.NB.wiki)
##################################################################################
# Multiple regression wiki GLM
##################################################################################
mult.m.NB.wiki <- glm.nb(diff~seconds+taxa_gen+status+pred_prey+diaries,data = wikiData)
summary(mult.m.NB.wiki)
plot(mult.m.NB.wiki)
# get the coefficients back in units we can understand by undoing the link function
exp(coef(mult.m.NB.wiki))
# get pseudo R^2 values
modEvA::RsqGLM(model=mult.m.NB.wiki)
# export regression output
tidy_mult.m.NB.wiki <- tidy(mult.m.NB.wiki)
tidy_mult.m.NB.wiki
kable(tidy_mult.m.NB.wiki)
# compare the simple model with the more complex using AIC
AIC(m.NB.wiki,mult.m.NB.wiki)
##################################################################################
# Simple linear model for twitter hits of the species
##################################################################################
tweetData <- subData[complete.cases(subData), ] # drop the NAs for twitter
m.lm.twitter<-lm(tweet~seconds,data=tweetData)
summary(m.lm.twitter)
##################################################################################
# fit negative binomial regression for tweet counts
##################################################################################
m.NB.twitter<-glm.nb(tweet~seconds,data=tweetData)
summary(m.NB.twitter)
length(tweetData$baseline_2015)
