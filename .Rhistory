== strptime(as.Date("2016-09-23"), format = "%Y-%m-%d"),1,0)
##################################################################################
# get the data for the day and day after the species had its dedicated awareness
# day in 2016, then calculate the max value of hits it had on the day or day after
# the number of anomalies are also calculated but not used in the analysis
##################################################################################
# Dolphin 14/04/16
speciesName <- c("Dolphin")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-04-14"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-04-15"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Dolphin",max(c(
newdata1$views[newdata1$date=="2016-04-14"],
newdata1$views[newdata1$date=="2016-04-15"]
))))
# Giant panda 16/03/16
speciesName <- c("Giant_panda")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-03-16"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-03-17"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Giant panda",max(c(
newdata1$views[newdata1$date=="2016-03-16"],
newdata1$views[newdata1$date=="2016-03-17"]
))))
# Giraffe 21/06/16
speciesName <- c("Giraffe")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-06-21"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-06-22"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Giraffe",max(c(
newdata1$views[newdata1$date=="2016-06-21"],
newdata1$views[newdata1$date=="2016-03-22"]
))))
# Honey_bee 20/08/16
speciesName <- c("Honey_bee")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-08-20"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-08-21"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Honey_bee",max(c(
newdata1$views[newdata1$date=="2016-08-20"],
newdata1$views[newdata1$date=="2016-08-21"]
))))
# Lion 10/08/16
speciesName <- c("Lion")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-08-10"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-08-11"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Lion",max(c(
newdata1$views[newdata1$date=="2016-08-10"],
newdata1$views[newdata1$date=="2016-08-11"]
))))
# Orangutan 19/08/16
speciesName <- c("Orangutan")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-08-19"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-08-20"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Orangutan",max(c(
newdata1$views[newdata1$date=="2016-08-19"],
newdata1$views[newdata1$date=="2016-08-20"]
))))
# Pangolin 20/02/16
speciesName <- c("Pangolin")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-02-20"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-02-21"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Pangolin",max(c(
newdata1$views[newdata1$date=="2016-02-20"],
newdata1$views[newdata1$date=="2016-02-21"]
))))
# Polar_bear 27/02/16
speciesName <- c("Polar_bear")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-02-27"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-02-28"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Polar_bear",max(c(
newdata1$views[newdata1$date=="2016-02-27"],
newdata1$views[newdata1$date=="2016-02-28"]
))))
# Rhino 22/09/16
speciesName <- c("Rhinoceros")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-09-22"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-09-23"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Rhinoceros",max(c(
newdata1$views[newdata1$date=="2016-09-22"],
newdata1$views[newdata1$date=="2016-09-23"]
))))
# Sea_turtle 23/05/16
speciesName <- c("Sea_turtle")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-05-23"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-05-24"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Sea_turtle",max(c(
newdata1$views[newdata1$date=="2016-05-23"],
newdata1$views[newdata1$date=="2016-05-23"]
))))
# Sloth 20/10/16
speciesName <- c("Sloth")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-10-20"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-10-21"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Sloth",max(c(
newdata1$views[newdata1$date=="2016-10-20"],
newdata1$views[newdata1$date=="2016-10-21"]
))))
# Snake 16/07/16
speciesName <- c("Snake")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-07-16"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-07-17"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Snake",max(c(
newdata1$views[newdata1$date=="2016-07-16"],
newdata1$views[newdata1$date=="2016-07-17"]
))))
# Tiger 29/07/16
speciesName <- c("Tiger")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-07-29"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-07-30"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Tiger",max(c(
newdata1$views[newdata1$date=="2016-07-29"],
newdata1$views[newdata1$date=="2016-07-30"]
))))
# Vulture 03/09/16
speciesName <- c("Vulture")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-09-03"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-09-04"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Vulture",max(c(
newdata1$views[newdata1$date=="2016-09-03"],
newdata1$views[newdata1$date=="2016-09-04"]
))))
# Whale 13/02/16
speciesName <- c("Whale")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-02-13"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-02-14"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Whale",max(c(
newdata1$views[newdata1$date=="2016-02-13"],
newdata1$views[newdata1$date=="2016-02-14"]
))))
# Whale shark 30/08/16
speciesName <- c("Whale_shark")
# keep only the species we're interested in
newdata1<-combinedOutput[combinedOutput$article %in% speciesName,]
newdata1<-droplevels(newdata1)
res = AnomalyDetectionTs((data.frame(newdata1[2:3])), max_anoms=0.01, direction='both', plot=TRUE)
anomalies<-ifelse(strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-08-30"), format = "%Y-%m-%d") |
strptime((res$anoms$timestamp), format = "%Y-%m-%d")
== strptime(as.Date("2016-08-31"), format = "%Y-%m-%d"),1,0)
sum(anomalies)
res$anoms
print(c("Whale shark",max(c(
newdata1$views[newdata1$date=="2016-08-30"],
newdata1$views[newdata1$date=="2016-08-31"]
))))
# load in the data which is a vector of species names that have a dedicated awareness day
data<-read.csv("data/species_days.csv", header = TRUE, sep = ",")
head(data)
length(data$species)
# the differences between the species day value - the median value is compared with
# the data for Planet Earth 2 species day value - their median value i.e. the 'diff'
# column in the master spreadsheet
comparison_data <- read.csv("data/species_awareness_Vs_PE2_wikipedia.csv",header = T)
tapply(comparison_data$value,comparison_data$group,mean)
# the differences between the species day value - the median value is compared with
# the data for Planet Earth 2 species day value - their median value i.e. the 'diff'
# column in the master spreadsheet
comparison_data <- read.csv("data/species_awareness_Vs_PE2_wikipedia.csv",header = T)
tapply(comparison_data$value,comparison_data$group,mean)
tapply(comparison_data$value,comparison_data$group,median)
comparison_data %>% group_by(group) %>%
ggplot2::aes(value) + geom_density()
library(ggplot2)
comparison_data %>% group_by(group) %>%
ggplot2::aes(value) + geom_density()
comparison_data %>% group_by(group)
comparison_data %>% group_by(group) %>%
ggplot2::aes(x=value) + geom_histogram()
comparison_data %>% group_by(group) %>%
aes(x=value) + geom_histogram()
library(ggplot2)
comparison_data %>% group_by(group) %>%
ggpplot(aes(x=value)) + geom_histogram()
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value)) + geom_histogram()
library(ggplot2)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value)) + geom_histogram()
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,color=group)) + geom_histogram()
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=group)) + geom_histogram()
library(ggplot2)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=group)) +xlab("difference between baseline and day")+ geom_histogram()
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=group)) +
xlab("difference between baseline and day")+
geom_freqpoly()
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=group)) +
xlab("difference between baseline and day")+
geom_density()
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=group)) +
xlab("difference between baseline and day")+
geom_density(alpha=0.5)
tapply(comparison_data$value,comparison_data$group,max)
library(ggplot2)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=group)) +
xlab("difference between baseline and day")+
geom_density(alpha=0.5)
library(ggplot2)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=group(labels=c("species awareness day", "Planet Earth 2")))) + xlab("difference between baseline and day")+
geom_density(alpha=0.5)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=factor(group(labels=c("species awareness day", "Planet Earth 2"))))) + xlab("difference between baseline and day")+
geom_density(alpha=0.5)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=factor(grouplabels=c("species awareness day", "Planet Earth 2")))) + xlab("difference between baseline and day")+
geom_density(alpha=0.5)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=factor(group,labels=c("species awareness day", "Planet Earth 2")))) + xlab("difference between baseline and day")+
geom_density(alpha=0.5)
library(ggplot2)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=factor(group,labels=c("species awareness day", "Planet Earth 2")))) + xlab("difference between baseline and day")+
geom_density(alpha=0.5) +
labs(fill="")
library(ggplot2)
comparison_data %>% group_by(group) %>%
ggplot(aes(x=value,fill=factor(group,labels=c("Species awareness day", "Planet Earth 2")))) + xlab("difference between baseline and day")+
geom_density(alpha=0.5) +
labs(fill="")
19/43
################################################################################### Documentary analysis
# Code for Regression Models
##################################################################################
library(ggplot2)
library(fmsb) # VIF
library(MASS) # for negative binomial regression
library(broom) # export regression results
library(knitr) # export regression results
mydata<-read.csv("data/master.csv", header = T,sep=",")
head(mydata)
tail(mydata)
subData <- mydata[,c("baseline_2015","tweet","diff","seconds","taxa_gen","status","pred_prey","diaries")]
head(subData)
tail(subData)
# rename prey in the pred_prey as pred
levels(subData$pred_prey)[levels(subData$pred_prey)=="prey"] <- "pred"
head(subData)
# recode actinopterygii, amphibia, arachnida, diplopoda, malacostraca
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="actinopterygii"] <- "reptilia"
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="amphibia"] <- "reptilia"
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="arachnida"] <- "insecta"
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="diplopoda"] <- "insecta"
levels(subData$taxa_gen)[levels(subData$taxa_gen)=="malacostraca"] <- "insecta"
head(subData)
levels(subData$taxa_gen)
##################################################################################
# ANOVA of time on screen as a function of conservation status
##################################################################################
# replace the NAs in conservation status with 0
subData$status[is.na(subData$status)] <- 0
subData$status <- as.factor(subData$status)
levels(subData$status)
m.aov<-aov(subData$seconds~subData$status)
summary(m.aov)
p <- ggplot(subData, aes(x=status, y=seconds,fill=status)) +
geom_boxplot() +
labs(x="IUCN status", y = "Seconds on screen")
p + scale_fill_manual(labels = c("data deficient", "least concern", "near threatened", "vulnerable","endangered","critically endangered"),values=c("#ffffff", "#009933", "#336600","#ff9900", "#cc0000", "#990000"),name="IUCN status") + theme_classic() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
summary(subData$status)
round(summary(subData$status)/sum(table(subData$status)),3)
sum(round(summary(subData$status)/sum(table(subData$status)),3))
p2 <- ggplot(subData, aes(x=status, y=tweet,fill=status)) +
geom_boxplot() +
labs(x="IUCN status", y = "number of tweets")
p2 + scale_fill_manual(labels = c("data deficient", "least concern", "near threatened", "vulnerable","endangered","critically endangered"),values=c("#ffffff", "#009933", "#336600","#ff9900", "#cc0000", "#990000"),name="IUCN status") + theme_classic() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
##################################################################################
# Simple linear model for wikipedia hits
##################################################################################
# find out which explanatory variables have NAs
apply(subData, 2, function(x){any(is.na(x))})
m.lm.wiki <- lm(diff~seconds,data = subData)
summary(m.lm.wiki)
plot(m.lm.wiki) # poor fit
##################################################################################
# fit poisson regression for wiki hits on with the negatives removed
##################################################################################
# drop the differences that are negative i.e. those pages that had values less
# than the median on the episode of Planet Earth 2 covered that species
length(subData$baseline_2015)
wikiData<-subData[subData$diff>0,]
wikiData <- droplevels(wikiData)
length(wikiData$baseline_2015)
# multicolinearity test
VIF(lm(wikiData$tweet~wikiData$seconds+wikiData$diff))
VIF(lm(wikiData$seconds~wikiData$tweet+wikiData$diff))
VIF(lm(wikiData$diff~wikiData$tweet+wikiData$seconds))
m.poiss.wiki <- glm(diff~seconds,data = wikiData,family=poisson)
summary(m.poiss.wiki) # overdispersed
##################################################################################
# fit negative binomial regression for wiki hits on with the negatives removed
##################################################################################
m.NB.wiki <- glm.nb(diff~seconds,data = wikiData)
summary(m.NB.wiki)
# check for overdispersion, should be around 1, one suggested cutoff is < 1.5
summary(m.NB.wiki)$deviance / summary(m.NB.wiki)$df.residual
# get the coefficients back in units we can understand by undoing the link function
exp(coef(m.NB.wiki))
# get pseudo R^2 values
modEvA::RsqGLM(model=m.NB.wiki)
# export regression output
tidy_m.NB.wiki <- tidy(m.NB.wiki)
tidy_m.NB.wiki
kable(tidy_m.NB.wiki)
##################################################################################
# Multiple regression wiki GLM
##################################################################################
mult.m.NB.wiki <- glm.nb(diff~seconds+taxa_gen+status+pred_prey+diaries,data = wikiData)
summary(mult.m.NB.wiki)
# check for overdispersion, should be around 1, one suggested cutoff is < 1.5
summary(mult.m.NB.wiki)$deviance / summary(mult.m.NB.wiki)$df.residual
# get the coefficients back in units we can understand by undoing the link function
exp(coef(mult.m.NB.wiki))
# get pseudo R^2 values
modEvA::RsqGLM(model=mult.m.NB.wiki)
tidy_mult.m.NB.wiki
# export regression output
tidy_mult.m.NB.wiki <- tidy(mult.m.NB.wiki)
kable(tidy_mult.m.NB.wiki)
# export regression output
tidy_mult.m.NB.wiki <- tidy(mult.m.NB.wiki)
# get the coefficients back in units we can understand by undoing the link function
exp(coef(mult.m.NB.wiki))
# get pseudo R^2 values
modEvA::RsqGLM(model=mult.m.NB.wiki)
# export regression output
tidy_mult.m.NB.wiki <- tidy(mult.m.NB.wiki)
tidy_mult.m.NB.wiki
kable(tidy_mult.m.NB.wiki)
##################################################################################
# fit negative binomial regression for wiki hits on with the negatives removed
##################################################################################
m.NB.wiki <- glm.nb(diff~seconds,data = wikiData)
summary(m.NB.wiki)
# check for overdispersion, should be around 1, one suggested cutoff is < 1.5
summary(m.NB.wiki)$deviance / summary(m.NB.wiki)$df.residual
# get the coefficients back in units we can understand by undoing the link function
exp(coef(m.NB.wiki))
# get pseudo R^2 values
modEvA::RsqGLM(model=m.NB.wiki)
# export regression output
tidy_m.NB.wiki <- tidy(m.NB.wiki)
tidy_m.NB.wiki
kable(tidy_m.NB.wiki)
##################################################################################
# Multiple regression wiki GLM
##################################################################################
mult.m.NB.wiki <- glm.nb(diff~seconds+taxa_gen+status+pred_prey+diaries,data = wikiData)
summary(mult.m.NB.wiki)
# check for overdispersion, should be around 1, one suggested cutoff is < 1.5
summary(mult.m.NB.wiki)$deviance / summary(mult.m.NB.wiki)$df.residual
# get the coefficients back in units we can understand by undoing the link function
exp(coef(mult.m.NB.wiki))
# get pseudo R^2 values
modEvA::RsqGLM(model=mult.m.NB.wiki)
# export regression output
tidy_mult.m.NB.wiki <- tidy(mult.m.NB.wiki)
tidy_mult.m.NB.wiki
kable(tidy_mult.m.NB.wiki)
# compare the simple model with the more complex using AIC
AIC(m.NB.wiki,mult.m.NB.wiki)
x<-rnorm(100,10,5)
y<-x*rnorm(100,10,5)
summary(lm(y~x))
25/112
# episode 6 - 11 December 2016	2016-12-11
#                               2016-12-12
##################################################################################
library(data.table)
library(plyr)
library(AnomalyDetection)
# read in the data for the species names
output<-read.csv("data/output_PE1.csv",header = T,sep = ",")
# set the date class, sometimes we need different formats
# "%d-%m-%Y" "%d/%m/%Y" "%Y-%m-%d"
head(output)
?as.POSIXct
output$date<-as.POSIXct(strptime(output$date,"%Y-%m-%d"))
head(output)
diff.Date(output$date)
difftime(output$date)
diff(output$date)
difftime(output$date)
